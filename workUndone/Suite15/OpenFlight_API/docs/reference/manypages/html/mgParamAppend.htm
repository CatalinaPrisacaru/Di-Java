<HTML>
<HEAD>
<TITLE>mgParamAppend</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgParamAppend><H1 CLASS="APISYMBOL">mgParamAppend</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgParamAppend</B> - appends a value to an array type parameter 
in a parameter block.<P></DD>
</DL>
<DL>
<DT><H3>PYTHON SPECIFICATION &nbsp; &nbsp; &nbsp; (Not Available For C)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>mgbool <B>mgParamAppend</B> (</TD><TD><A HREF=mgparamblock.htm#mgparamblock>mgparamblock</A></TD><TD><I>paramBlock</I>,</TD></TR>
<TR><TD></TD><TD>const char*</TD><TD><I>paramName</I>,</TD></TR>
<TR><TD></TD><TD><A HREF=#variant>variant</A></TD><TD><I>paramValue</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgParamAppend</B> appends the value <I>paramValue</I> to the array type 
parameter named <I>paramName</I> in the parameter block <I>paramBlock</I>. 
If the parameter does not exist, no value is appended.</P></DD><DD><P>When setting up an array type parameter, use <A HREF=mgParamSet.htm#mgParamSet>mgParamSet</A> 
to set the first item in the array.  When you call <A HREF=mgParamSet.htm#mgParamSet>mgParamSet</A>, the 
parameter array is truncated to a single item.  To add the second and subsequent 
items to the array, use <B>mgParamAppend</B> as needed.</P></DD><DD><P>Note that if the parameter does not exist, it is NOT created in the parameter block. 
Also, if the parameter is not an array type parameter, this function will do nothing.</P></DD></DT></DL>
<DL><DT><H3>C NOTES</H3><DD><P>Note that this function is for OpenFlight Scripts only and cannot 
be used by your C language plug-in. 
In your C language plug-in you must use either 
<A HREF=mgParamAppendInteger.htm#mgParamAppendInteger>mgParamAppendInteger</A>, <A HREF=mgParamAppendDouble.htm#mgParamAppendDouble>mgParamAppendDouble</A>, <A HREF=mgParamAppendFloat.htm#mgParamAppendFloat>mgParamAppendFloat</A>, 
<A HREF=mgParamAppendBool.htm#mgParamAppendBool>mgParamAppendBool</A>, <A HREF=mgParamAppendString.htm#mgParamAppendString>mgParamAppendString</A>, <A HREF=mgParamAppendDouble2.htm#mgParamAppendDouble2>mgParamAppendDouble2</A> 
or <A HREF=mgParamAppendDouble3.htm#mgParamAppendDouble3>mgParamAppendDouble3</A> depending on the data type of the parameter.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>paramBlock</I></DT><DD>the parameter block</DD><DT><I>paramName</I></DT><DD>the parameter name</DD><DT><I>paramValue</I></DT><DD>value to append for <I>paramName</I></DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Returns <A HREF=mgbool.htm#mgbool>MG_TRUE</A> if successful, <A HREF=mgbool.htm#mgbool>MG_FALSE</A> otherwise. 
This function will fail if <I>paramName</I> is not a parameter in <I>paramBlock</I>, 
if <I>paramValue</I> is not a valid value for the <I>paramName</I> parameter 
as defined by its constraints (if any), or if the maximum dimension of 
<I>paramName</I> would be exceeded by appending this item.
</DD></DL><DL><DT><H3>PYTHON EXAMPLE</H3></DT><DD><DL><DT>The following shows how you might use this function in your script 
to execute the Polygon tool, which accepts an array of 3D points as 
parameters representing the points on the polygon:</DT><DT><PRE CLASS="EXAMPLE"># set the parameters for and call the Creator Polygon tool.
paramBlock = mgGetParamBlock ("Polygon")

# note that the "Points" parameter of the Polygon tool is an
# array type parameter - each point in the array is a point
# on the polygon created

# use mgParamSet to set the first point
mgParamSet (paramBlock, "Points", [0, 0, 0])

# then use mgParamAppend to add more points
mgParamAppend (paramBlock, "Points", [10,  0, 0])
mgParamAppend (paramBlock, "Points", [10, 10, 0])
mgParamAppend (paramBlock, "Points", [ 0, 10, 0])

# finally, set the parameter to make a "solid" polygon...
mgParamSet (paramBlock, "Type", "Solid")

# ...and execute the tool
mgExecute ("Polygon", paramBlock)</PRE></DT></DL></DD></DL>

<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 4</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgParamAppendInteger.htm#mgParamAppendInteger>mgParamAppendInteger</A>, <A HREF=mgParamAppendDouble.htm#mgParamAppendDouble>mgParamAppendDouble</A>, 
<A HREF=mgParamAppendFloat.htm#mgParamAppendFloat>mgParamAppendFloat</A>, <A HREF=mgParamAppendBool.htm#mgParamAppendBool>mgParamAppendBool</A>, <A HREF=mgParamAppendString.htm#mgParamAppendString>mgParamAppendString</A>, 
<A HREF=mgParamAppendDouble2.htm#mgParamAppendDouble2>mgParamAppendDouble2</A>, <A HREF=mgParamAppendDouble3.htm#mgParamAppendDouble3>mgParamAppendDouble3</A>, <A HREF=mgParamSet.htm#mgParamSet>mgParamSet</A>, 
<A HREF=mgGetParamBlock.htm#mgGetParamBlock>mgGetParamBlock</A></DD></DL></BODY>

</HTML>
