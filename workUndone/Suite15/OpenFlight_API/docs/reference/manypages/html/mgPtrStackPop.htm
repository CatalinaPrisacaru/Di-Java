<HTML>
<HEAD>
<TITLE>mgPtrStackPop</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgPtrStackPop><H1 CLASS="APISYMBOL">mgPtrStackPop</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgPtrStackPop</B> - pops an item off the top of a pointer stack.<P></DD>
</DL>
<DL>
<DT><H3>C SPECIFICATION &nbsp; &nbsp; &nbsp; (Not Available For Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>void* <B>mgPtrStackPop</B> (</TD><TD><A HREF=mgptrstack.htm#mgptrstack>mgptrstack</A></TD><TD><I>ptrStack</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgPtrStackPop</B> pops an item off the top of the pointer stack 
<I>ptrStack</I> and returns that item.</P></DD><DD><P>Note that this function does not free or otherwise affect the actual 
item that was popped from the stack.  If this item was dynamically 
allocated, it is the callers responsibility to deallocate it.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>ptrStack</I></DT><DD>the pointer stack</DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Returns the item that was at the top of the stack before it was popped off, 
<A HREF=MG_NULL.htm#MG_NULL>MG_NULL</A> if stack is empty.
</DD></DL><DL><DT><H3>C EXAMPLE</H3></DT><DD><DL><DT>The following example shows how to pop all items from a pointer 
stack and deallocate the memory allocated for each.  The items in this 
pointer stack are dynamically allocated strings.</DT><DT><PRE CLASS="EXAMPLE">char* thisString;
while (thisString = (char*) mgPtrStackPop (ptrStack))
   mgFree (thisString);</PRE></DT></DL></DD></DL>

<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 1</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgNewPtrStack.htm#mgNewPtrStack>mgNewPtrStack</A>, <A HREF=mgFreePtrStack.htm#mgFreePtrStack>mgFreePtrStack</A>, 
<A HREF=mgPtrStackPush.htm#mgPtrStackPush>mgPtrStackPush</A>, <A HREF=mgPtrStackClear.htm#mgPtrStackClear>mgPtrStackClear</A>, 
<A HREF=mgPtrStackTop.htm#mgPtrStackTop>mgPtrStackTop</A>, <A HREF=mgPtrStackLength.htm#mgPtrStackLength>mgPtrStackLength</A></DD></DL></BODY>

</HTML>
