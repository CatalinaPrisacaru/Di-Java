<HTML>
<HEAD>
<TITLE>mgGetVersion</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgGetVersion><H1 CLASS="APISYMBOL">mgGetVersion</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgGetVersion</B> - returns the current OpenFlight API version running.<P></DD>
</DL>
<DL>
<DT><H3>C SPECIFICATION</H3></DT>
<DD>
<TABLE CLASS="SYNOPSIS">
<TR>
<TD>mgbool <B>mgGetVersion</B> (</TD><TD>char*</TD><TD><I>version</I>,</TD></TR>
<TR><TD></TD><TD>int</TD><TD><I>maxLen</I> );</TD>
</TR>
</TABLE>
</DD>
</DL>
<DL>
<DT><H3>PYTHON SPECIFICATION</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>mgbool, string <B>mgGetVersion</B> (  )
</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgGetVersion</B> returns the current OpenFlight API version loaded in the 
program runtime environment.  The version is returned in <I>version</I> 
as a character string of the form "X.Y.Z" where:</P></DD><DD><P><B>X</B> is the major revision number <BR> 
<B>Y</B> is the minor revision number <BR> 
<B>Z</B> is the sub release number</P></DD><DD><P>Use this function to determine, at runtime, which version of the OpenFlight API 
is loaded.  Use the macro <A HREF=MVERSION_API.htm#MVERSION_API>MVERSION_API</A> to determine which version of the API your c 
ode is compiled and linked against.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>version</I></DT><DD>address of string to receive version string</DD><DT><I>maxLen</I></DT><DD>maximum number of characters to store in 
<I>version</I></DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD><DL><DT>mgbool</DT><DD><A HREF=mgbool.htm#mgbool>MG_TRUE</A> if version retrieved successfully, 
<A HREF=mgbool.htm#mgbool>MG_FALSE</A> otherwise.</DD><DT>string</DT><DD>If function is successful, string contains the version, otherwise undefined.</DD></DL></DL>
<DL><DT><H3>C EXAMPLE</H3></DT><DD><DL><DT>In this example, the code was compiled against version 2.5.1 of the OpenFlight API 
and is running with version 2.6.0.</DT><DT><PRE CLASS="EXAMPLE">char runTimeVersion [20];
char linkTimeVersion [20];

// runTimeVersion will contain "2.6.0"
mgGetVersion (runTimeVersion, 20);

// linkTimeVersion will contain "2.5.1"
strncpy (linkTimeVersion, MVERSION_API, 20);</PRE></DT></DL></DD></DL>

<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 1</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=MVERSION_API.htm#MVERSION_API>MVERSION_API</A>, <A HREF=mgGetOpenFlightVersion.htm#mgGetOpenFlightVersion>mgGetOpenFlightVersion</A></DD></DL></BODY>

</HTML>
