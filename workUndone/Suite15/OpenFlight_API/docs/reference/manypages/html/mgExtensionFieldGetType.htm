<HTML>
<HEAD>
<TITLE>mgExtensionFieldGetType</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgExtensionFieldGetType><H1 CLASS="APISYMBOL">mgExtensionFieldGetType</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgExtensionFieldGetType</B> - gets the data type of an extension field.<P></DD>
</DL>
<DL>
<DT><H3>SYNOPSIS &nbsp; &nbsp; &nbsp; (C and Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>mgtagtype <B>mgExtensionFieldGetType</B> (</TD><TD>const char*</TD><TD><I>fieldGuid</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgExtensionFieldGetType</B> gets the data type of an extension field 
identified by <I>fieldGuid</I>.  The data type of an extension field identifies 
the kind of data this extension stores.  A data type of <A HREF=mgtagtype.htm#mgtagtype>MTYPE_INT</A>, 
for example, indicates that an extension stores an integer value.</P></DD><DD><P>Note that although the enumeration type <A HREF=mgtagtype.htm#mgtagtype>mgtagtype</A> contains many more 
enumerants, extension fields can be only the following types:<BR> 
<A HREF=mgtagtype.htm#mgtagtype>MTYPE_INT</A><BR> 
<A HREF=mgtagtype.htm#mgtagtype>MTYPE_FLOAT</A><BR> 
<A HREF=mgtagtype.htm#mgtagtype>MTYPE_DOUBLE</A><BR> 
<A HREF=mgtagtype.htm#mgtagtype>MTYPE_TEXT</A><BR> 
<A HREF=mgtagtype.htm#mgtagtype>MTYPE_XML</A><BR> 
<A HREF=mgtagtype.htm#mgtagtype>MTYPE_FLAG</A></P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>fieldGuid</I></DT><DD>the GUID of the field</DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Returns field data type if found, <A HREF=mgtagtype.htm#mgtagtype>MTYPE_NULL</A> otherwise.
</DD></DL><DL><DT><H3>C EXAMPLE</H3></DT><DD><DL><DT>The following example shows the valid return values for <B>mgExtensionFieldGetType</B>.</DT><DT><PRE CLASS="EXAMPLE">#define MY_FIELD_GUID  "688538E5-E2D1-4098-9AF0-6DE5E386AB97"
mgtagtype tag;

tag = mgExtensionFieldGetType (MY_FIELD_GUID);
switch (tag)
{
case MTYPE_INT:
   // extension field is an integer value
   break;

case MTYPE_FLOAT:
   // extension field is a single precision floating point value
   break;

case MTYPE_DOUBLE:
   // extension field is a double precision floating point value
   break;

case MTYPE_TEXT:
   // extension field is a character string (unformatted)
   break;

case MTYPE_XML:
   // extension field is a character string (formatted as XML)
   break;

case MTYPE_FLAG:
   // extension field is a boolean value (&lte mgbool.MG_TRUE&gt or &lte mgbool.MG_FALSE&gt )
   break;

case MTYPE_NULL:
   // extension field identified by myFieldGuid is unknown
   break;
}</PRE></DT></DL></DD></DL>

<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 1</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgExtensionFieldSetType.htm#mgExtensionFieldSetType>mgExtensionFieldSetType</A>, <A HREF=mgExtensionFieldAdd.htm#mgExtensionFieldAdd>mgExtensionFieldAdd</A>, 
<A HREF=mgExtensionFieldGetName.htm#mgExtensionFieldGetName>mgExtensionFieldGetName</A>, <A HREF=mgExtensionFieldGetAttach.htm#mgExtensionFieldGetAttach>mgExtensionFieldGetAttach</A>, 
<A HREF=mgExtensionSiteAdd.htm#mgExtensionSiteAdd>mgExtensionSiteAdd</A></DD></DL></BODY>

</HTML>
