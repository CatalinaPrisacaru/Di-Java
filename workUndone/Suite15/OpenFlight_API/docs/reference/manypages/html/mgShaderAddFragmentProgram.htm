<HTML>
<HEAD>
<TITLE>mgShaderAddFragmentProgram</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgShaderAddFragmentProgram><H1 CLASS="APISYMBOL">mgShaderAddFragmentProgram</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgShaderAddFragmentProgram</B> - adds a fragment program to a shader.<P></DD>
</DL>
<DL>
<DT><H3>SYNOPSIS &nbsp; &nbsp; &nbsp; (C and Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>mgbool <B>mgShaderAddFragmentProgram</B> (</TD><TD><A HREF=mgrec.htm#mgrec>mgrec*</A></TD><TD><I>shader</I>,</TD></TR>
<TR><TD></TD><TD>const char*</TD><TD><I>programFileName</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgShaderAddFragmentProgram</B> adds the fragment program specified by 
<I>programFileName</I> to the specified <I>shader</I>.</P></DD><DD><P>Note: GLSL shaders can have zero or more fragment programs.  Cg shaders 
can have at most one. If you call this function for a GLSL shader, the fragment 
program is added to the shader.  If you call this function for a Cg shader, 
the existing fragment program on the shader (if any) will be replaced.  If the 
Cg shader does not yet have a fragment program assigned, this function will 
assign one.  For Cg shaders, this function is equivalent to calling 
<A HREF=mgSetAttList.htm#mgSetAttList>mgSetAttList</A> on the shader for attribute 
<A TARGET=flt_content HREF=../../openflightdd/flt_dd.htm#fltShaderPalette>fltShaderFragmentProgramFilename</A>
.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>shader</I></DT><DD>the GLSL shader</DD><DT><I>programFileName</I></DT><DD>the GLSL shader fragment program file</DD></DL></DD></DL>
<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 2</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgShaderDeleteFragmentProgramNth.htm#mgShaderDeleteFragmentProgramNth>mgShaderDeleteFragmentProgramNth</A>, <A HREF=mgShaderSetFragmentProgramNth.htm#mgShaderSetFragmentProgramNth>mgShaderSetFragmentProgramNth</A>, 
<A HREF=mgShaderGetFragmentProgramNth.htm#mgShaderGetFragmentProgramNth>mgShaderGetFragmentProgramNth</A>, 
<A HREF=mgShaderAddVertexProgram.htm#mgShaderAddVertexProgram>mgShaderAddVertexProgram</A></DD></DL></BODY>

</HTML>
