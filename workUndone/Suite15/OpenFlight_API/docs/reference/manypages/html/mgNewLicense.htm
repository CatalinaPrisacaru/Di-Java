<HTML>
<HEAD>
<TITLE>mgNewLicense</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgNewLicense><H1 CLASS="APISYMBOL">mgNewLicense</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgNewLicense</B> - creates a named license.<P></DD>
</DL>
<DL>
<DT><H3>C SPECIFICATION &nbsp; &nbsp; &nbsp; (Not Available For Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>mglicense <B>mgNewLicense</B> (</TD><TD>const char*</TD><TD><I>licenseName</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgNewLicense</B> creates a license identified by <I>licenseName</I>. 
This license is typically created and checked out by a plug-in to verify 
that the plug-in is allowed to run in the Creator modeler environment.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>licenseName</I></DT><DD>the name of the license to create</DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Pointer to license if created successfully, <A HREF=MG_NULL.htm#MG_NULL>MG_NULL</A> otherwise.
</DD></DL><DL><DT><H3>C EXAMPLE</H3></DT><DD><DL><DT>The following example shows how a plug-in might use the license 
facility to determine whether or not it can run in the Creator modeler 
environment.</DT><DT><PRE CLASS="EXAMPLE">static mglicense MyLicense = MG_NULL;

// Plug-in initialization function
MGPIDECLARE(mgbool) mgpInit (mgplugin plugin, int* argc, char* argv [ )
{
   mgbool isLicensed = MG_FALSE;
   mgstatus checkoutStatus;

   // create the license...
   MyLicense = mgNewLicense ("myLicenseName");

   // ...try to check it out
   checkoutStatus = mgCheckoutLicense (MyLicense);
   isLicensed = MSTAT_ISOK (checkoutStatus);

   if (isLicensed) {
      // register tools declared by this plug-in
      RegisterMyTools (plugin, argc, argv);
   }
   // return MG_TRUE to continue loading...
   // ...MG_FALSE to tell Creator to unload plug-in
   return (isLicensed);
}

// Plug-in termination function
MGPIDECLARE(void) mgpExit (mgplugin plugin)
{
   mgUnregisterAllTools (plugin);
   // done with license, check it in...
   mgCheckinLicense (MyLicense);
   // ...and free it
   mgFreeLicense (MyLicense);
   MyLicense = MG_NULL;
}</PRE></DT></DL></DD></DL>

<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 4</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mglicense.htm#mglicense>mglicense</A>, <A HREF=mgFreeLicense.htm#mgFreeLicense>mgFreeLicense</A>, <A HREF=mgCheckoutLicense.htm#mgCheckoutLicense>mgCheckoutLicense</A>, 
<A HREF=mgCheckinLicense.htm#mgCheckinLicense>mgCheckinLicense</A></DD></DL></BODY>

</HTML>
