<HTML>
<HEAD>
<TITLE>mgMeshCreateVtxPool</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgMeshCreateVtxPool><H1 CLASS="APISYMBOL">mgMeshCreateVtxPool</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgMeshCreateVtxPool</B> - creates the vertex pool for a mesh.<P></DD>
</DL>
<DL>
<DT><H3>SYNOPSIS &nbsp; &nbsp; &nbsp; (C and Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>void* <B>mgMeshCreateVtxPool</B> (</TD><TD><A HREF=mgrec.htm#mgrec>mgrec*</A></TD><TD><I>rec</I>,</TD></TR>
<TR><TD></TD><TD>unsigned int</TD><TD><I>mask</I>,</TD></TR>
<TR><TD></TD><TD>unsigned int</TD><TD><I>num</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P>This function allocates and attaches a vertex pool to mesh <I>rec</I>. 
The size of the vertex pool allocated is determined by <I>num</I> and <I>mask</I>. 
The value of <I>num</I> specifies how many vertices to allocate.  The value of 
<I>mask</I> is a bitwise combination of Mesh Vertex Mask Bits specifying what 
kind of data to allocate for each vertex in the pool.</P></DD><DD><P>The following describes each of the Mesh Vertex Mask Bits 
that you can combine in <I>mask</I>:</P></DD><DD><P><A HREF=MMESH_VTXCOORD.htm#MMESH_VTXCOORD>MMESH_VTXCOORD</A> - Include this bit if the vertices in 
the vertex pool have coordinate positions (x,y,z).  Use function 
<A HREF=mgMeshSetVtxCoord.htm#mgMeshSetVtxCoord>mgMeshSetVtxCoord</A> to set the coordinate position of a vertex 
in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXCOLOR.htm#MMESH_VTXCOLOR>MMESH_VTXCOLOR</A> - Include this bit if the vertices in the 
vertex pool have colors represented by a color index and intensity. 
Use function <A HREF=mgMeshSetVtxColor.htm#mgMeshSetVtxColor>mgMeshSetVtxColor</A> to set the color index and 
intensity of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXCOLORRGB.htm#MMESH_VTXCOLORRGB>MMESH_VTXCOLORRGB</A> - Include this bit if the vertices in 
the vertex pool have colors represented by RGB values.  Use function 
<A HREF=mgMeshSetVtxColorRGB.htm#mgMeshSetVtxColorRGB>mgMeshSetVtxColorRGB</A> to set the RGB colors of a vertex in the 
vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXNORMAL.htm#MMESH_VTXNORMAL>MMESH_VTXNORMAL</A> - Include this bit if the vertices in 
the vertex pool have normals (i,j,k).  Use function 
<A HREF=mgMeshSetVtxNormal.htm#mgMeshSetVtxNormal>mgMeshSetVtxNormal</A> to set the normal of a vertex in the 
vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV0.htm#MMESH_VTXUV0>MMESH_VTXUV0</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 0. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV1.htm#MMESH_VTXUV1>MMESH_VTXUV1</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 1. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV2.htm#MMESH_VTXUV2>MMESH_VTXUV2</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 2. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV3.htm#MMESH_VTXUV3>MMESH_VTXUV3</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 3. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV4.htm#MMESH_VTXUV4>MMESH_VTXUV4</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 4. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV5.htm#MMESH_VTXUV5>MMESH_VTXUV5</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 5. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV6.htm#MMESH_VTXUV6>MMESH_VTXUV6</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 6. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P><A HREF=MMESH_VTXUV7.htm#MMESH_VTXUV7>MMESH_VTXUV7</A> - Include this bit if the vertices in 
the vertex pool have texture coordinates (u,v) for layer 7. 
Use function <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A> to set the texture coordinates 
of a vertex in the vertex pool.</P></DD><DD><P>After you allocate a mesh vertex pool using this function 
you can assign values for each the vertices in the pool using 
the functions <A HREF=mgMeshSetVtxCoord.htm#mgMeshSetVtxCoord>mgMeshSetVtxCoord</A>, <A HREF=mgMeshSetVtxColor.htm#mgMeshSetVtxColor>mgMeshSetVtxColor</A>, 
<A HREF=mgMeshSetVtxColorRGB.htm#mgMeshSetVtxColorRGB>mgMeshSetVtxColorRGB</A>, <A HREF=mgMeshSetVtxNormal.htm#mgMeshSetVtxNormal>mgMeshSetVtxNormal</A>, and 
<A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A>.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>rec</I></DT><DD>the <A TARGET=flt_content HREF=../../openflightdd/flt_dd.htm#fltMesh>fltMesh</A>
 node</DD><DT><I>mask</I></DT><DD>specifies what kind of data each vertex has</DD><DT><I>num</I></DT><DD>the number of vertices to create</DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Returns the vertex pool allocated if successful, 
<A HREF=mgbool.htm#mgbool>MG_FALSE</A> otherwise. 
This function will fail if <I>rec</I> is not a valid mesh node.
</DD></DL><DL><DT><H3>ACCESS LEVEL</H3><DD>Level 2</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgMeshCreatePrimitives.htm#mgMeshCreatePrimitives>mgMeshCreatePrimitives</A>, <A HREF=mgMeshPrimitiveSetType.htm#mgMeshPrimitiveSetType>mgMeshPrimitiveSetType</A>, 
<A HREF=mgMeshPrimitiveSetVtxIndexArray.htm#mgMeshPrimitiveSetVtxIndexArray>mgMeshPrimitiveSetVtxIndexArray</A>, 
<A HREF=mgMeshSetVtxCoord.htm#mgMeshSetVtxCoord>mgMeshSetVtxCoord</A>, <A HREF=mgMeshSetVtxColor.htm#mgMeshSetVtxColor>mgMeshSetVtxColor</A>, 
<A HREF=mgMeshSetVtxColorRGBA.htm#mgMeshSetVtxColorRGBA>mgMeshSetVtxColorRGBA</A>, <A HREF=mgMeshSetVtxColorRGB.htm#mgMeshSetVtxColorRGB>mgMeshSetVtxColorRGB</A>, 
<A HREF=mgMeshSetVtxColorAlpha.htm#mgMeshSetVtxColorAlpha>mgMeshSetVtxColorAlpha</A>, <A HREF=mgMeshSetVtxNormal.htm#mgMeshSetVtxNormal>mgMeshSetVtxNormal</A>, <A HREF=mgMeshSetVtxUV.htm#mgMeshSetVtxUV>mgMeshSetVtxUV</A></DD></DL></BODY>

</HTML>
