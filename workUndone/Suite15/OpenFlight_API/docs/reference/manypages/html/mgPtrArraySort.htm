<HTML>
<HEAD>
<TITLE>mgPtrArraySort</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgPtrArraySort><H1 CLASS="APISYMBOL">mgPtrArraySort</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgPtrArraySort</B> - sort the contents of a pointer array.<P></DD>
</DL>
<DL>
<DT><H3>C SPECIFICATION &nbsp; &nbsp; &nbsp; (Not Available For Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>int <B>mgPtrArraySort</B> (</TD><TD><A HREF=mgptrarray.htm#mgptrarray>mgptrarray</A></TD><TD><I>ptrArray</I>,</TD></TR>
<TR><TD></TD><TD><A HREF=mgptrarraycomparefunc.htm#mgptrarraycomparefunc>mgptrarraycomparefunc</A></TD><TD><I>compareFunc</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgPtrArraySort</B> reorders the elements of a pointer array <I>ptrArray</I> 
according to the specified compare function <I>compareFunc</I>.</P></DD><DD><P>The <I>compareFunc</I> is a function that compares two array elements and 
returns a value specifying their relationship.  <B>mgPtrArraySort</B> calls the 
compare function one or more times during the sort, passing pointers to two 
array elements on each call: 
<PRE CLASS="EXAMPLE">*(compareFunc) (const void* item1Addr, const void* item1Addr)</PRE></P></DD><DD><P>The compare function compares the elements and returns:<BR> 
< 0 - if item pointed to by <I>item1Addrr</I> is less than item pointed to by <I>item2Addr</I><BR> 
0 - if item pointed to by <I>item1Addrr</I> is equal to item pointed to by <I>item2Addr</I><BR> 
> 0 - if item pointed to by <I>item1Addrr</I> is greater than item pointed to by <I>item2Addr</I></P></DD><DD><P>This describes a sort in ascending order.  To sort an array in descending 
order, reverse the sense of "greater than" and "less than" in the comparison 
function.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>ptrArray</I></DT><DD>the pointer array</DD><DT><I>compareFunc</I></DT><DD>the comparison function for 
the items in <I>ptrArray</I></DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>The length of the pointer array.
</DD></DL><DL><DT><H3>C EXAMPLE</H3></DT><DD><DL><DT><PRE CLASS="EXAMPLE">static int CompareNames (const void* item1Addr, const void* item2Addr)
{
   // Note the indirection required to get to the actual items in the
   // array.  The parameters item1Addr and item2Addr are pointers to
   // the items you loaded into the array, in this case, they are
   // pointers to char*

   char* name1 = *((char**) item1Addr);
   char* name2 = *((char**) item2Addr);
   return strcmp (name1, name2);
}

char name1[20] = "Yet Another Name";
char name2[20] = "Another Name";
char name3[20] = "A Name";

mgptrarray array = mgNewPtrArray ();
mgPtrArrayAppend (array, name1);
mgPtrArrayAppend (array, name2);
mgPtrArrayAppend (array, name3);

// before... order of items in array:
// "Yet Another Name"
// "Another Name"
// "A Name"

mgPtrArraySort (array, CompareNames);

// after... order of items in array:
// "A Name"
// "Another Name"
// "Yet Another Name"</PRE></DT></DL></DD></DL>
<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 1</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgNewPtrArray.htm#mgNewPtrArray>mgNewPtrArray</A>, <A HREF=mgFreePtrArray.htm#mgFreePtrArray>mgFreePtrArray</A>, <A HREF=mgPtrArrayAppend.htm#mgPtrArrayAppend>mgPtrArrayAppend</A>, 
<A HREF=mgPtrArrayInsert.htm#mgPtrArrayInsert>mgPtrArrayInsert</A>, <A HREF=mgPtrArrayReplace.htm#mgPtrArrayReplace>mgPtrArrayReplace</A>, <A HREF=mgPtrArrayGet.htm#mgPtrArrayGet>mgPtrArrayGet</A>, 
<A HREF=mgPtrArrayRemove.htm#mgPtrArrayRemove>mgPtrArrayRemove</A>, <A HREF=mgPtrArrayLength.htm#mgPtrArrayLength>mgPtrArrayLength</A>, <A HREF=mgPtrArraySearch.htm#mgPtrArraySearch>mgPtrArraySearch</A>, 
<A HREF=mgPtrArrayBSearch.htm#mgPtrArrayBSearch>mgPtrArrayBSearch</A></DD></DL></BODY>

</HTML>
