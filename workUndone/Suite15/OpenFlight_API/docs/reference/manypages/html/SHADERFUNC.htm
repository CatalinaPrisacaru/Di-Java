<HTML>
<HEAD>
<TITLE>SHADERFUNC</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<A NAME=SHADERFUNC><H1>Shader Functions</H1></A>

<TABLE width="100%" border="0", cellspacing="1", cellpadding="3" ><TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgDeleteShader.htm#mgDeleteShader><B>mgDeleteShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, int <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgDeleteShaderByName.htm#mgDeleteShaderByName><B>mgDeleteShaderByName</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, const char* <I>name</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgGetCurrentShader.htm#mgGetCurrentShader><B>mgGetCurrentShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, int* <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgrec.htm#mgrec>mgrec*</A> <TD><A HREF=mgGetFirstShader.htm#mgGetFirstShader><B>mgGetFirstShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, int* <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgrec.htm#mgrec>mgrec*</A> <TD><A HREF=mgGetNextShader.htm#mgGetNextShader><B>mgGetNextShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int* <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgrec.htm#mgrec>mgrec*</A> <TD><A HREF=mgGetShader.htm#mgGetShader><B>mgGetShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, int <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right">int <TD><A HREF=mgGetShaderCount.htm#mgGetShaderCount><B>mgGetShaderCount</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right">char* <TD><A HREF=mgGetShaderProgramSaveName.htm#mgGetShaderProgramSaveName><B>mgGetShaderProgramSaveName</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, const char* <I>programFilename</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right">int <TD><A HREF=mgIndexOfShader.htm#mgIndexOfShader><B>mgIndexOfShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, const char* <I>name</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right">char* <TD><A HREF=mgNameOfShader.htm#mgNameOfShader><B>mgNameOfShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, int <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgrec.htm#mgrec>mgrec*</A> <TD><A HREF=mgNewShader.htm#mgNewShader><B>mgNewShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, const char* <I>name</I>, int* <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgSetCurrentShader.htm#mgSetCurrentShader><B>mgSetCurrentShader</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, int <I>index</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderAddFragmentProgram.htm#mgShaderAddFragmentProgram><B>mgShaderAddFragmentProgram</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, const char* <I>programFileName</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderAddVertexProgram.htm#mgShaderAddVertexProgram><B>mgShaderAddVertexProgram</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, const char* <I>programFileName</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderDeleteFragmentProgramNth.htm#mgShaderDeleteFragmentProgramNth><B>mgShaderDeleteFragmentProgramNth</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int <I>nth</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderDeleteVertexProgramNth.htm#mgShaderDeleteVertexProgramNth><B>mgShaderDeleteVertexProgramNth</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int <I>nth</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right">char* <TD><A HREF=mgShaderGetFragmentProgramNth.htm#mgShaderGetFragmentProgramNth><B>mgShaderGetFragmentProgramNth</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int <I>nth</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgfilelocatorfunc.htm#mgfilelocatorfunc>mgfilelocatorfunc</A> <TD><A HREF=mgShaderGetLocatorFunc.htm#mgShaderGetLocatorFunc><B>mgShaderGetLocatorFunc</B></A> (void) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgsavepathtype.htm#mgsavepathtype>mgsavepathtype</A> <TD><A HREF=mgShaderGetSavePathType.htm#mgShaderGetSavePathType><B>mgShaderGetSavePathType</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right">char* <TD><A HREF=mgShaderGetVertexProgramNth.htm#mgShaderGetVertexProgramNth><B>mgShaderGetVertexProgramNth</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int <I>nth</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderSetFragmentProgramNth.htm#mgShaderSetFragmentProgramNth><B>mgShaderSetFragmentProgramNth</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int <I>nth</I>, const char* <I>programFileName</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderSetLocatorFunc.htm#mgShaderSetLocatorFunc><B>mgShaderSetLocatorFunc</B></A> (<A HREF=mgfilelocatorfunc.htm#mgfilelocatorfunc>mgfilelocatorfunc</A> <I>locatorFunc</I>, void* <I>userData</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderSetSavePathType.htm#mgShaderSetSavePathType><B>mgShaderSetSavePathType</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>db</I>, <A HREF=mgsavepathtype.htm#mgsavepathtype>mgsavepathtype</A> <I>saveType</I>) ;</TR>
<TR valign="top" bgcolor="#F3F3F3">
<TD align="right"><A HREF=mgbool.htm#mgbool>mgbool</A> <TD><A HREF=mgShaderSetVertexProgramNth.htm#mgShaderSetVertexProgramNth><B>mgShaderSetVertexProgramNth</B></A> (<A HREF=mgrec.htm#mgrec>mgrec*</A> <I>shader</I>, int <I>nth</I>, const char* <I>programFileName</I>) ;</TR>
</TABLE>
<BR>


</BODY>

</HTML>
