<HTML>
<HEAD>
<TITLE>mgGeoCoordAdd</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgGeoCoordAdd><H1 CLASS="APISYMBOL">mgGeoCoordAdd</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgGeoCoordAdd</B> - adds geospecific coordinates to a texture 
attribute record.<P></DD>
</DL>
<DL>
<DT><H3>SYNOPSIS &nbsp; &nbsp; &nbsp; (C and Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>int <B>mgGeoCoordAdd</B> (</TD><TD><A HREF=mgrec.htm#mgrec>mgrec*</A></TD><TD><I>imgRec</I>,</TD></TR>
<TR><TD></TD><TD><A HREF=mggeocoorddata.htm#mggeocoorddata>mggeocoorddata</A></TD><TD><I>geoCoordData[]</I>,</TD></TR>
<TR><TD></TD><TD>int</TD><TD><I>n</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgGeoCoordAdd</B> adds <I>n</I> geospecific coordinates to the specified 
texture attribute record <I>imgRec</I> (of type <A TARGET=flt_content HREF=../../openflightdd/flt_dd.htm#fltImage>fltImage</A>
).  The coordinates 
are passed via the array <I>geoCoordData</I>. The number of coordinates actually 
added is returned.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>imgRec</I></DT><DD>the texture attribute record</DD><DT><I>geoCoordData[]</I></DT><DD>the array of geospecific coordinates to be added</DD><DT><I>n</I></DT><DD>the number of coordinates in the 
the array <I>geoCoordData</I></DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Returns the number of coordinates added.
</DD></DL><DL><DT><H3>C EXAMPLE</H3></DT><DD><DL><DT><PRE CLASS="EXAMPLE">mgrec* imgRec = mgGetTextureAttributes (db, textureIndex);
mggeocoorddata geoCoords[3];

// set the data for each element of the sequence
geoCoords[0].u = 0.0;
geoCoords[0].v = 0.0;
geoCoords[0].lat = 37.0;
geoCoords[0].lon = 122.0;

geoCoords[1].u = 1024.0;
geoCoords[1].v = 0.0;
geoCoords[1].lat = 38.0;
geoCoords[1].lon = 122.0;

geoCoords[2].u = 1024.0;
geoCoords[2].v = 1024.0;
geoCoords[2].lat = 38.0;
geoCoords[2].lon = 123.0;

// add these geoCoords to the existing coordinates
mgGeoCoordAdd (imgRec, geoCoords, 3);</PRE></DT></DL></DD></DL>
<DL><DT><H3>PYTHON EXAMPLE</H3></DT><DD><DL><DT><PRE CLASS="EXAMPLE">imgRec = mgGetTextureAttributes (db, textureIndex)
# allocate 3 elements for the subtexture data
geoCoords = mggeocoorddata(3)

# set the data for each geoCoord
geoCoords[0].u = 0.0
geoCoords[0].v = 0.0
geoCoords[0].lat = 37.0
geoCoords[0].lon = 122.0

geoCoords[1].u = 1024.0
geoCoords[1].v = 0.0
geoCoords[1].lat = 38.0
geoCoords[1].lon = 122.0

geoCoords[2].u = 1024.0
geoCoords[2].v = 1024.0
geoCoords[2].lat = 38.0
geoCoords[2].lon = 123.0

# add these geoCoords to the existing coordinates
mgGeoCoordAdd (imgRec, geoCoords, 3)</PRE></DT></DL></DD></DL>
<DL><DT><H3>ACCESS LEVEL</H3><DD>Level 2</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgGeoCoordDelete.htm#mgGeoCoordDelete>mgGeoCoordDelete</A>, <A HREF=mgGeoCoordGet.htm#mgGeoCoordGet>mgGeoCoordGet</A>, <A HREF=mgGeoCoordCount.htm#mgGeoCoordCount>mgGeoCoordCount</A>, 
<A HREF=mggeocoorddata.htm#mggeocoorddata>mggeocoorddata</A></DD></DL></BODY>

</HTML>
