<HTML>
<HEAD>
<TITLE>mgEditorAddUndo</TITLE>

<STYLE type='text/css'>
pre.EXAMPLE {background-color: #F1F1F1; padding: 2px; border: 1px solid #D1D1D1; font-family: monospace;}
table.SYNOPSIS {font-family: monospace;}
table.SIMPLE {border: 1px solid #D1D1D1; border-collapse: collapse;}
span.MONOSPACE {font-family: monospace;}
td.BORDER {border: 1px solid #D1D1D1; padding: 2px;}
tr.HEADER {background-color: #F1F1F1; color:#326db9; font-weight: bold;}
td.QUESTION {font-weight: bold; background-color: #C2C7E2;}
table.FAQ {width: 100%; border: 1px solid #D1D1D1; padding: 0px;}
li.NOINDENT {margin-left: 0px;}
img {margin:5px 0px;}
h1.APISYMBOL {background-color:#F1F1F1; color:#326db9;}
h1 {color:#326db9;}
h2 {color:#326db9;}
h3 {color:#326db9;}
h4 {color:#326db9;}
h5 {color:#326db9;}
</STYLE>

</HEAD>

<BODY bgcolor="#FFFFFF" text="#000000" >
<A NAME=top></A>


<LEFT><A NAME=mgEditorAddUndo><H1 CLASS="APISYMBOL">mgEditorAddUndo</H1></A></LEFT>
<DL>
<DT><H3>FUNCTION NAME</H3></DT>
<DD><B>mgEditorAddUndo</B> - creates a new undo entry and registers 
an undo callback action to it for an editor tool instance.<P></DD>
</DL>
<DL>
<DT><H3>SYNOPSIS &nbsp; &nbsp; &nbsp; (C and Python)</H3></DT>
<DD><TABLE CLASS="SYNOPSIS">
<TR>
<TD>mgstatus <B>mgEditorAddUndo</B> (</TD><TD><A HREF=mgeditorcontext.htm#mgeditorcontext>mgeditorcontext</A></TD><TD><I>editorContext</I>,</TD></TR>
<TR><TD></TD><TD>const char*</TD><TD><I>menuLabel</I>,</TD></TR>
<TR><TD></TD><TD><A HREF=mgeditorundofunc.htm#mgeditorundofunc>mgeditorundofunc</A></TD><TD><I>undoFunc</I>,</TD></TR>
<TR><TD></TD><TD><A HREF=mgeditorundocleanupfunc.htm#mgeditorundocleanupfunc>mgeditorundocleanupfunc</A></TD><TD><I>undoCleanupFunc</I>,</TD></TR>
<TR><TD></TD><TD>void*</TD><TD><I>undoData</I> );</TD>
</TR>
</TABLE></DD>
</DL>
<DL><DT><H3>DESCRIPTION</H3><DD><P><B>mgEditorAddUndo</B> creates a new undo-able action item 
in the undo menu for the specified editor context, <I>editorContext</I>. 
This undo-able action results from the user invoking an editor tool 
instance.</P></DD><DD><P>When an editor tool instance performs an undo-able action, it 
registers the action using this function.  Doing so causes 
an undo entry to be created in the Edit->Undo menu with the 
specified label string <I>menuLabel</I>. If <A HREF=MUML_USETOOLNAME.htm#MUML_USETOOLNAME>MUML_USETOOLNAME</A> is 
specified for <I>menuLabel</I>, the name of the editor tool is used 
as the menu label string.</P></DD><DD><P>When this undo entry is selected by the user, the specified 
undo callback function, <I>undoFunc</I> is called and passed 
the specified undo data <I>undoData</I>.  In this function, the editor 
tool instance is responsible for restoring the database to the state 
it was in prior to the editor tool instance being launched.  This 
is critical for previous undo/redo callback actions to correctly 
perform their processing.</P></DD><DD><P>After the undo callback function is called, the undo cleanup 
callback function, <I>undoCleanupFunc</I> is called.  In this 
function, the editor tool instance can deallocate the undo 
data.  Alternatively, the undo cleanup callback function may be 
called when the undo entry in the Edit->Undo menu becomes 
unreachable.  In this case, the undo callback function will not 
be called before the undo cleanup callback function.</P></DD><DD><P>Note that if an editor tool instance performs an action 
but does not register an undo for that action using this function 
or any of the other undo registration functions, it must call 
<A HREF=mgEditorResetUndo.htm#mgEditorResetUndo>mgEditorResetUndo</A> so that all the items already in the 
Edit->Undo menu can be properly cleared.  If an editor tool 
instance does not register an undo and does not call 
<A HREF=mgEditorResetUndo.htm#mgEditorResetUndo>mgEditorResetUndo</A>, the modeling system may become unstable.</P></DD></DT></DL>
<DL><DT><H3>PARAMETERS</H3></DT><DD><DL><DT><I>editorContext</I></DT><DD>the editor context to 
register undo callback for</DD><DT><I>menuLabel</I></DT><DD>the text of the undo 
menu item to display</DD><DT><I>undoFunc</I></DT><DD>the undo callback function 
for this undo-able action</DD><DT><I>undoCleanupFunc</I></DT><DD>the undo cleanup callback 
function for this undo-able action</DD><DT><I>undoData</I></DT><DD>user data to be passed to 
callback functions <I>undoFunc</I> 
and <I>undoCleanupFunc</I> when they 
are called</DD></DL></DD></DL>
<DL><DT><H3>RETURNS</H3></DT><DD>Use <A HREF=MSTAT_ISOK.htm#MSTAT_ISOK>MSTAT_ISOK</A> to check return value for success.
</DD></DL><DL><DT><H3>ACCESS LEVEL</H3><DD>Level 4</DD></DT></DL>
<DL><DT><H3>SEE ALSO</H3></DT><DD><A HREF=mgRegisterEditor.htm#mgRegisterEditor>mgRegisterEditor</A>, 
<A HREF=mgEditorAppendUndo.htm#mgEditorAppendUndo>mgEditorAppendUndo</A>, <A HREF=mgEditorResetUndo.htm#mgEditorResetUndo>mgEditorResetUndo</A>, 
<A HREF=mgEditorAddRedo.htm#mgEditorAddRedo>mgEditorAddRedo</A>, <A HREF=mgEditorAddUndoForRedo.htm#mgEditorAddUndoForRedo>mgEditorAddUndoForRedo</A>, 
<A HREF=mgEditorAddUndoForCreate.htm#mgEditorAddUndoForCreate>mgEditorAddUndoForCreate</A>, <A HREF=mgEditorAppendUndoForCreate.htm#mgEditorAppendUndoForCreate>mgEditorAppendUndoForCreate</A>, 
<A HREF=mgEditorAddUndoForDelete.htm#mgEditorAddUndoForDelete>mgEditorAddUndoForDelete</A>, <A HREF=mgEditorAppendUndoForDelete.htm#mgEditorAppendUndoForDelete>mgEditorAppendUndoForDelete</A>, 
<A HREF=mgEditorAddUndoForMove.htm#mgEditorAddUndoForMove>mgEditorAddUndoForMove</A>, <A HREF=mgEditorAppendUndoForMove.htm#mgEditorAppendUndoForMove>mgEditorAppendUndoForMove</A></DD></DL></BODY>

</HTML>
